from kazoo.client import KazooClient
from kazoo.recipe.barrier import Barrier
from threading import Lock
import logging

controller_connection = 'node09:9066'
leader_node = '/leader'
participant_node = '/participant'
crash_node = '/crash'
barrier_node = '/leader-barrier'


class LeaderUpdate():

    def __init__(self):
        #Zookeeper watch on leader changes
        logging.basicConfig()
        self.zk = KazooClient(controller_connection)
        self.zk.start()
        self.zk.ensure_path(leader_node)
        self.lock = Lock()
        self.leader = ''
        self.first = True

        @self.zk.DataWatch(leader_node)
        def leader_change(data,stat):
            if data == '':
                return True

            self.leader = data
            return True

    def get_leader(self):
        return self.leader

    def __del__(self):
        self.zk.stop()

